@page "/presentlist"
@using BirthList.Shared;
@using System.Text.RegularExpressions;
@inject HttpClient Http

<h1>Lista de Regalos</h1>

<div>
    <p>Aquí podrás ver la lista de regalos, con sus propiedades, y poder interactuar con ellos. </p>
    <p>Buscar:<input @bind-value="SearchText" @bind-value:event="oninput" /></p>
</div>
@if(!presents.Any())
{
    <p><em>Loading...</em></p>
}
else
{
<div class="row">
    @foreach (var present in FilteredPresents)
    {
        if (present.RemainingAmount > 0)
        {
            <a class="col-md-4" href="/present/@present.RowKey">
                <div class="well well-white mini-profile-widget">
                    <div class="image-container">
                        <img src="@present.ImageLink" class="avatar img-responsive" alt="@present.Title">
                    </div>
                    <div class="details">
                        <h4>@present.Title</h4>
                        <hr>
                        <div>@present.Description</div>
                        <div>Precio orientativo: @present.EstimatedPrice €</div>
                        <div>Comprados @(present.RequiredAmount-present.RemainingAmount) de @present.RequiredAmount</div>
                        <div class="mg-top-10"><a target="_blank" href="@present.SampleLink">Link de compra</a></div>
                    </div>
                </div>
            </a>
        }
        else
        {
            <div class="col-md-4">
                <div class="well well-white mini-profile-widget">
                    <div class="image-container">
                        <img src="@present.ImageLink" class="avatar img-responsive" alt="@present.Title">
                    </div>
                    <div class="details">
                        <h4>@present.Title</h4>
                        <hr>
                        <div>@present.Description</div>
                        <div>Comprado!</div>
                    </div>
                </div>
            </div>
        }

    }
</div>
}

@code {
    private List<Present> presents = new List<Present>();

    private string _pattern = @"[<>:/\\""|?* ]";

    public string SearchText = "";

    protected override async Task OnInitializedAsync()
    {
        presents = await Http.GetFromJsonAsync<List<Present>>("Present/List");
    }

    List<Present> FilteredPresents => presents.Where(p => p.Title.ToLowerInvariant().Contains(SearchText.ToLowerInvariant()) || p.Description.Contains(SearchText.ToLowerInvariant())).ToList();

}
